services:
  base:
    build:
      context: .
      dockerfile: ./Dockerfile.base

  mongo:
    image: mongo:latest
    ports:
      - 27017:27017
    networks:
      - discovery-network
    volumes:
      - mongo-data:/data/db

  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile
      additional_contexts:
        base: service:base
    volumes:
      - type: bind
        source: ./apps/backend
        target: /app/apps/backend
    environment:
      NODE_ENV: development
      DB_URI: mongodb://mongo:27017/music-discovery-app-dev
      PORT: 3001
      SESSION_SECRET: keyboardcat
    ports:
      - 3001:3001
    networks:
      - discovery-network
    depends_on:
      - mongo
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/v1/health"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 30s

  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile
      additional_contexts:
        base: service:base
    volumes:
      - type: bind
        source: ./apps/frontend
        target: /app/apps/frontend
    environment:
      NODE_ENV: development
    ports:
      - 3000:3000
    networks:
      - discovery-network
    depends_on:
      - backend

networks: # allow services to talk to each other while providing isolation from other docker container, running on the same host
  discovery-network:
    driver: bridge

volumes: # enable persistence of database data across container restart
  mongo-data:
    driver: local
