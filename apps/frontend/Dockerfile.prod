# syntax=docker/dockerfile:1
# check=error=true;experimental=CopyIgnoredFile

ARG NODE_VERSION=22.16.0
FROM node:${NODE_VERSION}-alpine AS frontend-dependencies

WORKDIR /app

COPY package.json yarn.lock tsconfig.json ./

COPY \
components/package.json \
components/tsconfig.json \
components/postcss.config.mjs \
./components/

COPY \
common/types/package.json \
common/types/tsconfig.json \
./common/types/

COPY \
apps/frontend/package.json \
apps/frontend/tsconfig.json \
apps/frontend/postcss.config.mjs \
apps/frontend/next.config.ts \
./apps/frontend/

RUN corepack enable && yarn install

FROM node:${NODE_VERSION}-alpine AS frontend-build

WORKDIR /app
ENV NODE_OPTIONS=--max_old_space_size=2048

# Copy frontend deps and config
COPY --from=frontend-dependencies \
/app/package.json \
/app/yarn.lock \
/app/tsconfig.json \
/app/.pnp.cjs \
/app/.pnp.loader.mjs \
./

COPY .yarn/ /app/.yarn/

# Copy frontend source files
COPY \
apps/frontend/ \
./apps/frontend/

# Copy component source files
COPY --from=frontend-dependencies \
/app/components \
./components

COPY \
components/ \
/app/components/

COPY --from=frontend-dependencies \
/app/common/types \
./common/types

COPY \
common/types/ \
./common/types/

RUN corepack enable && yarn install

RUN yarn workspace @common/types build
RUN yarn workspace @mda/components build
RUN yarn workspace frontend build

CMD ["tail", "-f", "/dev/null"]

FROM node:${NODE_VERSION}-alpine AS frontend-production

WORKDIR /app

COPY --from=frontend-build /app/apps/frontend/.next/ ./apps/frontend/.next/
COPY --from=frontend-build /app/apps/frontend/package.json ./apps/frontend/

COPY --from=frontend-dependencies \
/app/package.json \
/app/.pnp.cjs \
/app/.pnp.loader.mjs \
/app/yarn.lock \
./

# COPY --from=frontend-build /app/.yarn /app/.yarn/

COPY --from=frontend-build \
/app/common/types/dist \
./common/types/dist

COPY --from=frontend-build \
/app/common/types/package.json \
./common/types

COPY --from=frontend-build \
/app/components/package.json \
./components/

COPY --from=frontend-build \
/app/components/dist \
./components/dist/

RUN corepack enable && yarn workspaces focus -A --production

EXPOSE 3000

CMD ["yarn", "workspace", "frontend", "start"]